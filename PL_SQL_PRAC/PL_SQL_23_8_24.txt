2.EXCEPTION USING USER-DEFINED :-

-- CASE : 1

DECLARE
      CURSOR C1 (C_DEPTNO NUMBER)
      IS
      SELECT * FROM EMP_SAMPLE
      WHERE DEPTNO = C_DEPTNO;

      CR1  C1%ROWTYPE;

BEGIN
      OPEN C1(10);
      FETCH C1 INTO CR1;
      IF C1%NOTFOUND THEN
          RAISE_APPLICATION_ERROR(-20999,'Invalid Dept No');
      END IF;
      CLOSE C1;
END;
/

OUTPUT:

PL/SQL procedure successfully completed.

====================================================================================================================

-- CASE : 2

DECLARE
      CURSOR C1 (C_DEPTNO NUMBER)
      IS
      SELECT * FROM EMP_SAMPLE
      WHERE DEPTNO = C_DEPTNO;

      CR1  C1%ROWTYPE;

BEGIN
      OPEN C1(1023);
      FETCH C1 INTO CR1;
      IF C1%NOTFOUND THEN
          RAISE_APPLICATION_ERROR(-20999,'Invalid Dept No');
      END IF;
      CLOSE C1;
END;
/

OUTPUT:

ERROR at line 1:
ORA-20999: Invalid Dept No
ORA-06512: at line 13

====================================================================================================================
3.EXCEPTION USING CURSOR WITH CONDITION BASED ON SALARY :-

DECLARE
   CURSOR C1 (E_DEPTNO NUMBER)
   IS
   SELECT * FROM EMP_SRINI
   WHERE EMPID = E_DEPTNO;
  
   CR1	C1%ROWTYPE;
   TARGET_SAL NUMBER(10) :=95721;

BEGIN
   OPEN C1 (2002);
   LOOP
           FETCH C1 INTO CR1;
           EXIT WHEN C1%NOTFOUND;
	IF CR1.BASIC_SAL > TARGET_SAL THEN
		DBMS_OUTPUT.PUT_LINE('Employee :  ' || CR1.EMP_NAME || ' has a salary above the threshold.');
                   ELSE
		DBMS_OUTPUT.PUT_LINE('Employee :  ' || CR1.EMP_NAME || ' has a salary Below the threshold.');
                   END IF;
   END LOOP;
   CLOSE C1;

EXCEPTION
       WHEN OTHERS THEN 
	DBMS_OUTPUT.PUT_LINE (SQLERRM);

END;
/

OUTPUT:

Employee :  GOPAL has a salary Below the threshold.

PL/SQL procedure successfully completed.

====================================================================================================================
4.CURSOR TO FETCH EMPLOYEE NAME USING AN EXCEPTION_HANDLING

DECLARE
   CURSOR C1 (E_DEPTID NUMBER)
   IS
   SELECT * FROM EMP_SRINI
   WHERE DEPT_ID = E_DEPTID;
  
   CR1    C1%ROWTYPE;

BEGIN
    OPEN C1(150);
    FETCH C1 INTO CR1;
    
    IF C1%NOTFOUND  THEN
	RAISE_APPLICATION_ERROR(-20001, 'No employees found in this department ID');  --EXCEPTION 

    ELSE
        LOOP
               FETCH C1 INTO CR1;
               EXIT WHEN C1%NOTFOUND;
               DBMS_OUTPUT.PUT_LINE ('Employee: ' || CR1.emp_name || ', Job Title: ' || CR1.DESIGNATION);
       END LOOP;
   END IF;
   CLOSE C1;

END;
/


OUTPUT:
Employee: PREM, Job Title: OPERATOR
Employee: SURESH, Job Title: OPERATOR

PL/SQL procedure successfully completed.
====================================================================================================================
5.CURSOR USING FOR LOOP

DECLARE
    CURSOR C1 (E_DEPTID NUMBER)
    IS
    SELECT * FROM EMP_SRINI
    WHERE DEPT_ID = E_DEPTID;
    
BEGIN
    FOR CR1 IN C1(100) 
    LOOP
         DBMS_OUTPUT.PUT_LINE('Employee: ' || CR1.emp_name || ', Job Title: ' || CR1.Designation);
    END LOOP;

    IF C1%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'No employees found in this department.');
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error Message Occured as : ' || SQLERRM);
        DBMS_OUTPUT.PUT_LINE('Error Code Occured as : ' || SQLCODE);

END;
/