--1. ZERO_DIVIDE_ERROR:-

DECLARE
   A NUMBER:=100;
   B NUMBER:= 10;
   RES  NUMBER;
BEGIN
   RES:=A/B;
   DBMS_OUTPUT.PUT_LINE('RESULT OF A AND B IS  : ' || RES);
EXCEPTION
  WHEN ZERO_DIVIDE THEN
     DBMS_OUTPUT.PUT_LINE('Dividing By zero Please check the Entered values again');
     DBMS_OUTPUT.PUT_LINE('The value of A is : '|| a); 
     DBMS_OUTPUT.PUT_LINE('The value of B is : '|| b); 
END;
/

OUTPUT:

RESULT OF A AND B IS  : 1

PL/SQL procedure successfully completed.

-- WHEN ERROR RAISED THROUGHS A MESSAGE AS :

Dividing By zero Please check the Entered values again
The value of A is : 100
The value of B is : 0

PL/SQL procedure successfully completed.


____________________________________________________________________________________________________________________________________________

-- 2.TOO_MANY_ROWS:-

DECLARE
    V_SAL NUMBER(10);

BEGIN
   SELECT DEPTNO INTO V_SAL 
   FROM EMP_SAMPLE
   WHERE DEPTNO=30;

    DBMS_OUTPUT.PUT_LINE(V_SAL);

EXCEPTION
   WHEN TOO_MANY_ROWS THEN
       DBMS_OUTPUT.PUT_LINE('CHOOSEN ATTRIBUTE WILL CONTAINS MORE DUPLICATES..!');
END;
/

OUTPUT:

CHOOSEN ATTRIBUTE WILL CONTAINS MORE DUPLICATES..!

PL/SQL procedure successfully completed.
____________________________________________________________________________________________________________________________________________

--3. OTHERS

DECLARE
   A NUMBER:=10;
   B NUMBER:= 0;
   RES  NUMBER;
BEGIN
   RES:=A/B;
   DBMS_OUTPUT.PUT_LINE('RESULT OF A AND B IS  : ' || RES);

EXCEPTION
   /* WHEN ZERO_DIVIDE THEN 
      DBMS_OUTPUT.PUT_LINE('ZERO DIVIDE ERROR HANDLED'); 

   WHEN TOO_MANY_ROWS THEN 
      DBMS_OUTPUT.PUT_LINE('TOO_MANY_ROWS ERROR HANDLED'); 
 */

   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ACTUAL ERROR RAISED');
      DBMS_OUTPUT.PUT_LINE('Orcale Error Message : ' || SQLERRM);
      DBMS_OUTPUT.PUT_LINE('Error Code : ' ||  SQLCODE);
      
END;
/

OUTPUT: 

ACTUAL ERROR RAISED
Orcale Error Message : ORA-01476: divisor is equal to zero
Error Code : -1476

PL/SQL procedure successfully completed.

____________________________________________________________________________________________________________________________________________
BOOLEANS 

DECLARE 
   A BOOLEAN ;
   B BOOLEAN ;
BEGIN
   A:=TRUE;
   B:=FALSE;
   
   IF A AND B THEN
         DBMS_OUTPUT.PUT_LINE('TRUE');
   ELSE 
         DBMS_OUTPUT.PUT_LINE('FALSE');
   END IF;
END;
/
____________________________________________________________________________________________________________________________________________

1.EXCEPTION USING CODE VALUE :-

DECLARE
    V_SAL NUMBER(10);

BEGIN
   SELECT DEPTNO INTO V_SAL 
   FROM EMP_SAMPLE
   WHERE DEPTNO = 30143;

   DBMS_OUTPUT.PUT_LINE(V_SAL);

EXCEPTION
    WHEN OTHERS THEN
    IF  SQLCODE= '-1403' THEN
           DBMS_OUTPUT.PUT_LINE('SQLCODE WRONG');
   END IF;
END;
/

====================================================================================================================
2.EXCEPTION USING USER-DEFINED :-

-- CASE : 1

DECLARE
      CURSOR C1 (C_DEPTNO NUMBER)
      IS
      SELECT * FROM EMP_SAMPLE
      WHERE DEPTNO = C_DEPTNO;

      CR1  C1%ROWTYPE;

BEGIN
      OPEN C1(10);
      FETCH C1 INTO CR1;
      IF C1%NOTFOUND THEN
          RAISE_APPLICATION_ERROR(-20999,'Invalid Dept No');
      END IF;
      CLOSE C1;
END;
/

OUTPUT:

PL/SQL procedure successfully completed.

====================================================================================================================

-- CASE : 2

DECLARE
      CURSOR C1 (C_DEPTNO NUMBER)
      IS
      SELECT * FROM EMP_SAMPLE
      WHERE DEPTNO = C_DEPTNO;

      CR1  C1%ROWTYPE;

BEGIN
      OPEN C1(1023);
      FETCH C1 INTO CR1;
      IF C1%NOTFOUND THEN
          RAISE_APPLICATION_ERROR(-20999,'Invalid Dept No');
      END IF;
      CLOSE C1;
END;
/

OUTPUT:

ERROR at line 1:
ORA-20999: Invalid Dept No
ORA-06512: at line 13

====================================================================================================================
3.EXCEPTION USING CURSOR WITH CONDITION BASED ON SALARY :-

DECLARE
   CURSOR C1 (E_DEPTNO NUMBER)
   IS
   SELECT * FROM EMP_SRINI
   WHERE EMPID = E_DEPTNO;
  
   CR1	C1%ROWTYPE;
   TARGET_SAL NUMBER(10) :=95721;

BEGIN
   OPEN C1 (2002);
   LOOP
           FETCH C1 INTO CR1;
           EXIT WHEN C1%NOTFOUND;
	IF CR1.BASIC_SAL > TARGET_SAL THEN
		DBMS_OUTPUT.PUT_LINE('Employee :  ' || CR1.EMP_NAME || ' has a salary above the threshold.');
                   ELSE
		DBMS_OUTPUT.PUT_LINE('Employee :  ' || CR1.EMP_NAME || ' has a salary Below the threshold.');
                   END IF;
   END LOOP;
   CLOSE C1;

EXCEPTION
       WHEN OTHERS THEN 
	DBMS_OUTPUT.PUT_LINE (SQLERRM);

END;
/
	
====================================================================================================================
4.CURSOR TO FETCH EMPLOYEE NAME USING AN EXCEPTION_HANDLING

DECLARE
   CURSOR C1 (E_DEPTID NUMBER)
   IS
   SELECT * FROM EMP_SRINI
   WHERE DEPT_ID = E_DEPTID;
  
   CR1    C1%ROWTYPE;

BEGIN
    OPEN C1(150);
    FETCH C1 INTO CR1;
    
    IF C1%NOTFOUND  THEN
	RAISE_APPLICATION_ERROR(-20001, 'No employees found in this department ID');  --EXCEPTION 

    ELSE
        LOOP
               FETCH C1 INTO CR1;
               EXIT WHEN C1%NOTFOUND;
               DBMS_OUTPUT.PUT_LINE ('Employee: ' || CR1.emp_name || ', Job Title: ' || CR1.DESIGNATION);
       END LOOP;
   END IF;
   CLOSE C1;

END;
/

====================================================================================================================
5.CURSOR USING FOR LOOP

DECLARE
    CURSOR C1 (E_DEPTID NUMBER)
    IS
    SELECT * FROM EMP_SRINI
    WHERE DEPT_ID = E_DEPTID;
    
BEGIN
    FOR CR1 IN C1(100) 
    LOOP
         DBMS_OUTPUT.PUT_LINE('Employee: ' || CR1.emp_name || ', Job Title: ' || CR1.Designation);
    END LOOP;

    IF C1%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'No employees found in this department.');
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error Message Occured as : ' || SQLERRM);
        DBMS_OUTPUT.PUT_LINE('Error Code Occured as : ' || SQLCODE);

END;
/

====================================================================================================================

DECLARE
    A  CHAR(5);
    B  CHAR(5):= 'SRINI';

BEGIN

   A:=B;
   DBMS_OUTPUT.PUT_LINE(A);

END;
/


====================================================================================================================


SQL> SET  SERVEROUTPUT ON;
SQL> DECLARE
  2      A  NUMBER(10):=2;
  3      B  VARCHAR2(10);
  4  
  5  BEGIN
  6   IF 2<NULL THEN
  7    DBMS_OUTPUT.PUT_LINE('NULL');
  8   END IF;
  9  END;
 10  /

PL/SQL procedure successfully completed.

====================================================================================================================


DECLARE
   A NUMBER:=10;
   B NUMBER:= 0;
   RES  NUMBER;
BEGIN
   RES:=A/B;
   DBMS_OUTPUT.PUT_LINE('RESULT OF A AND B IS  : ' || RES);

EXCEPTION
    WHEN ZERO_DIVIDE OR TOO_MANY_ROWS  THEN
	DBMS_OUTPUT.PUT_LINE('ERROR OCCURED');

END;
/




====================================================================================================================


















